/** https://responsibleapi.com */
responsible syntax=1

info {
    title "yanic"
    description "async yt-dlp server"
    version "1.0.0"
}

servers {
    url "http://localhost:8006"
}

type "YtDlInfo" "struct" description="defined in an external lib. yt-dlp for Python, manually for Kotlin"
type "YtDlOpts" "struct" description="defined in an external lib. yt-dlp for Python, manually for Kotlin"

struct "InfoReq" {
    url "httpURL"
    (?)opts "YtDlOpts"
}

struct "DownloadReq" {
    info "YtDlInfo"
    (?)opts "YtDlOpts"
}

* {
    req {
        mime "application/json"
    }

    res {
        mime "application/json"

        header "Content-Length" "int32" minimum=1

        "400" {
            description "invalid request"
            body "text/plain" "string" minLength=1
        }

        "422" {
            description "yt-dlp error"
            body "text/plain" "string" minLength=1
        }
    }
}

scope "/info" {
    GET {
        req {
            query "url" "httpURL"
        }
        res {
            "200" "YtDlInfo"
        }
    }

    POST {
        req "InfoReq"
        res {
            "200" "YtDlInfo"
        }
    }
}

POST "/download" {
    req "DownloadReq"
    res {
        "200" "unknown"
    }
}
